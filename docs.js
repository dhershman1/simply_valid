module.exports = [{"title":"hasValue","syntax":"hasValue(val)","usage":{"commonjs":{"title":"CommonJs","code":"const hasValue = require('simply_valid/hasValue');"},"standard":{"title":"Standard","code":"import hasValue from 'simply_valid/hasValue';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/hasValue/index.js\"></script>"}},"desc":"Validates if the value is actually a value","examples":["const result = hasValue('11'); // => true\nconst result = hasValue(''); // => false"],"params":[{"type":{"names":["Any"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"hasNumbers","syntax":"hasNumbers(val)","usage":{"commonjs":{"title":"CommonJs","code":"const hasNumbers = require('simply_valid/hasNumbers');"},"standard":{"title":"Standard","code":"import hasNumbers from 'simply_valid/hasNumbers';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/hasNumbers/index.js\"></script>"}},"desc":"Validates if the value contains numbers or not","examples":["const result = hasNumbers('11'); // => true\nconst result = hasNumbers('eew2211'); // => true\nconst result = hasNumbers('eerrt'); // => false"],"params":[{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"hasLetters","syntax":"hasLetters(val)","usage":{"commonjs":{"title":"CommonJs","code":"const hasLetters = require('simply_valid/hasLetters');"},"standard":{"title":"Standard","code":"import hasLetters from 'simply_valid/hasLetters';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/hasLetters/index.js\"></script>"}},"desc":"Validates if the value contains numbers or not","examples":["const result = hasLetters('11'); // => false\nconst result = hasLetters('eew2211'); // => true\nconst result = hasLetters('eerrt'); // => true"],"params":[{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"hasSpecialCharacters","syntax":"hasSpecialCharacters(val)","usage":{"commonjs":{"title":"CommonJs","code":"const hasSpecialCharacters = require('simply_valid/hasSpecialCharacters');"},"standard":{"title":"Standard","code":"import hasSpecialCharacters from 'simply_valid/hasSpecialCharacters';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/hasSpecialCharacters/index.js\"></script>"}},"desc":"Validates if the value contains Special Characters","examples":["const result = hasSpecialCharacters('11%%$#'); // => true\nconst result = hasSpecialCharacters('eew2211!@'); // => true\nconst result = hasSpecialCharacters('eerrt'); // => false"],"params":[{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"hasNumbersOrSpecials","syntax":"hasNumbersOrSpecials(val)","usage":{"commonjs":{"title":"CommonJs","code":"const hasNumbersOrSpecials = require('simply_valid/hasNumbersOrSpecials');"},"standard":{"title":"Standard","code":"import hasNumbersOrSpecials from 'simply_valid/hasNumbersOrSpecials';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/hasNumbersOrSpecials/index.js\"></script>"}},"desc":"Validates if the value contains Special Characters or numbers","examples":["const result = hasNumbersOrSpecials('11%%$#'); // => true\nconst result = hasNumbersOrSpecials('eew2211!@'); // => true\nconst result = hasNumbersOrSpecials('eerrt'); // => false"],"params":[{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"hasUpperAndLowerCase","syntax":"hasUpperAndLowerCase(val)","usage":{"commonjs":{"title":"CommonJs","code":"const hasUpperAndLowerCase = require('simply_valid/hasUpperAndLowerCase');"},"standard":{"title":"Standard","code":"import hasUpperAndLowerCase from 'simply_valid/hasUpperAndLowerCase';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/hasUpperAndLowerCase/index.js\"></script>"}},"desc":"Validates if the value contains Special Characters or numbers","examples":["const result = hasUpperAndLowerCase('11%%$#'); // => false\nconst result = hasUpperAndLowerCase('Eew2211!@'); // => true\nconst result = hasUpperAndLowerCase('eERrt'); // => true"],"params":[{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"isDate","syntax":"isDate(val)","usage":{"commonjs":{"title":"CommonJs","code":"const isDate = require('simply_valid/isDate');"},"standard":{"title":"Standard","code":"import isDate from 'simply_valid/isDate';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/isDate/index.js\"></script>"}},"desc":"Validates if a normal date is valid or not","examples":["const result = isDate('1/2/2019'); // => true"],"params":[{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"isDateShort","syntax":"isDateShort(val)","usage":{"commonjs":{"title":"CommonJs","code":"const isDateShort = require('simply_valid/isDateShort');"},"standard":{"title":"Standard","code":"import isDateShort from 'simply_valid/isDateShort';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/isDateShort/index.js\"></script>"}},"desc":"Validates if a short date is valid or not","examples":["const result = isDateShort('1/19'); // => true"],"params":[{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"isDateProper","syntax":"isDateProper(val)","usage":{"commonjs":{"title":"CommonJs","code":"const isDateProper = require('simply_valid/isDateProper');"},"standard":{"title":"Standard","code":"import isDateProper from 'simply_valid/isDateProper';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/isDateProper/index.js\"></script>"}},"desc":"Validates if a \"Proper\" date is valid or not","examples":["const result = isDateProper('2019/1/2'); // => true"],"params":[{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"isEmail","syntax":"isEmail(email, val)","usage":{"commonjs":{"title":"CommonJs","code":"const isEmail = require('simply_valid/isEmail');"},"standard":{"title":"Standard","code":"import isEmail from 'simply_valid/isEmail';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/isEmail/index.js\"></script>"}},"desc":"Validates if a email is valid or not using the email regex","examples":["const result = isEmail('default', 'dusty@gmail.com'); // => true\nconst result = isEmail('default')('dusty@gmail.com'); // => true"],"params":[{"type":{"names":["RegExp","Void"]},"description":"The Regex to use for validating the email string (pass falsy value for default)","name":"email"},{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"isNumber","syntax":"isNumber(val)","usage":{"commonjs":{"title":"CommonJs","code":"const isNumber = require('simply_valid/isNumber');"},"standard":{"title":"Standard","code":"import isNumber from 'simply_valid/isNumber';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/isNumber/index.js\"></script>"}},"desc":"Validates if a provided value is a valid number or not","examples":["const result = isNumber('2'); // => true\nconst result = isNumber(2); // => true"],"params":[{"type":{"names":["String","Number"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"isPositive","syntax":"isPositive(val)","usage":{"commonjs":{"title":"CommonJs","code":"const isPositive = require('simply_valid/isPositive');"},"standard":{"title":"Standard","code":"import isPositive from 'simply_valid/isPositive';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/isPositive/index.js\"></script>"}},"desc":"Validates if a provided value is a positive number","examples":["const result = isPositive('2'); // => true\nconst result = isPositive(2); // => true\nconst result = isPositive(-2); // => false"],"params":[{"type":{"names":["String","Number"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"isNegative","syntax":"isNegative(val)","usage":{"commonjs":{"title":"CommonJs","code":"const isNegative = require('simply_valid/isNegative');"},"standard":{"title":"Standard","code":"import isNegative from 'simply_valid/isNegative';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/isNegative/index.js\"></script>"}},"desc":"Validates if a provided value is a negative number","examples":["const result = isNegative('-2'); // => true\nconst result = isNegative(-2); // => true\nconst result = isNegative(2); // => false"],"params":[{"type":{"names":["String","Number"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"isVin","syntax":"isVin(vin, val)","usage":{"commonjs":{"title":"CommonJs","code":"const isVin = require('simply_valid/isVin');"},"standard":{"title":"Standard","code":"import isVin from 'simply_valid/isVin';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/isVin/index.js\"></script>"}},"desc":"Validates if a provided value is a valid vin number","examples":["const result = isVin('default', 'JM1CW2BL8C0127808'); // => true\nconst result = isVin('default')('JM1CW2BL8C0127808'); // => true"],"params":[{"type":{"names":["RegExp","Void"]},"description":"The Regex to use for validating the vin string (pass falsy value for default)","name":"vin"},{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"isZip","syntax":"isZip(val)","usage":{"commonjs":{"title":"CommonJs","code":"const isZip = require('simply_valid/isZip');"},"standard":{"title":"Standard","code":"import isZip from 'simply_valid/isZip';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/isZip/index.js\"></script>"}},"desc":"Validates if a provided value is a correct American zip code","examples":["const result = isZip('44444'); // => true\nconst result = isZip('232'); // => false"],"params":[{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"isCAPostalCode","syntax":"isCAPostalCode(val)","usage":{"commonjs":{"title":"CommonJs","code":"const isCAPostalCode = require('simply_valid/isCAPostalCode');"},"standard":{"title":"Standard","code":"import isCAPostalCode from 'simply_valid/isCAPostalCode';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/isCAPostalCode/index.js\"></script>"}},"desc":"Validates if a provided value is a valid CA postal Code","examples":["const result = isZip('K1A0B1'); // => true\nconst result = isZip('44444'); // => false"],"params":[{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"isPhone","syntax":"isPhone(val)","usage":{"commonjs":{"title":"CommonJs","code":"const isPhone = require('simply_valid/isPhone');"},"standard":{"title":"Standard","code":"import isPhone from 'simply_valid/isPhone';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/isPhone/index.js\"></script>"}},"desc":"Validates if a provided value is a valid Phone number","examples":["const result = isPhone('555-666-7777'); // => true\nconst result = isPhone('5556667777'); // => true"],"params":[{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"isLicensePlate","syntax":"isLicensePlate(val)","usage":{"commonjs":{"title":"CommonJs","code":"const isLicensePlate = require('simply_valid/isLicensePlate');"},"standard":{"title":"Standard","code":"import isLicensePlate from 'simply_valid/isLicensePlate';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/isLicensePlate/index.js\"></script>"}},"desc":"Validates if a provided value is a valid Phone number","examples":["const result = isLicensePlate('SSS1829'); // => true\nconst result = isLicensePlate('SSS-1829'); // => true\nconst result = isLicensePlate('SSSS 188'); // => false"],"params":[{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"isVisaCard","syntax":"isVisaCard(strict, val)","usage":{"commonjs":{"title":"CommonJs","code":"const isVisaCard = require('simply_valid/isVisaCard');"},"standard":{"title":"Standard","code":"import isVisaCard from 'simply_valid/isVisaCard';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/isVisaCard/index.js\"></script>"}},"desc":"Validates if a provided value is a valid Visa credit card","examples":["const result = isVisaCard(true, '4111111111111111'); // => true\nconst result = isVisaCard(true)('4111111111111111'); // => true"],"params":[{"type":{"names":["Boolean","Void"]},"description":"Determines if the card should be strictly validated","name":"strict"},{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"isVisaPanCard","syntax":"isVisaPanCard(strict, val)","usage":{"commonjs":{"title":"CommonJs","code":"const isVisaPanCard = require('simply_valid/isVisaPanCard');"},"standard":{"title":"Standard","code":"import isVisaPanCard from 'simply_valid/isVisaPanCard';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/isVisaPanCard/index.js\"></script>"}},"desc":"Validates if a provided value is a valid Visa Pan credit card","examples":["const result = isVisaPanCard(true, '4111111111111111222'); // => true\nconst result = isVisaPanCard(true)('4111111111111111222'); // => true"],"params":[{"type":{"names":["Boolean","Void"]},"description":"Determines if the card should be strictly validated","name":"strict"},{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"isMasterCard","syntax":"isMasterCard(strict, val)","usage":{"commonjs":{"title":"CommonJs","code":"const isMasterCard = require('simply_valid/isMasterCard');"},"standard":{"title":"Standard","code":"import isMasterCard from 'simply_valid/isMasterCard';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/isMasterCard/index.js\"></script>"}},"desc":"Validates if a provided value is a valid Master card","examples":["const result = isMasterCard(true, '5387109830289055'); // => true\nconst result = isMasterCard(true)('5387109830289055'); // => true"],"params":[{"type":{"names":["Boolean","Void"]},"description":"Determines if the card should be strictly validated","name":"strict"},{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"isAmexCard","syntax":"isAmexCard(strict, val)","usage":{"commonjs":{"title":"CommonJs","code":"const isAmexCard = require('simply_valid/isAmexCard');"},"standard":{"title":"Standard","code":"import isAmexCard from 'simply_valid/isAmexCard';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/isAmexCard/index.js\"></script>"}},"desc":"Validates if a provided value is a valid American Express card","examples":["const result = isMasterCard(true, '341111111111111'); // => true\nconst result = isMasterCard(true)('341111111111111'); // => true"],"params":[{"type":{"names":["Boolean","Void"]},"description":"Determines if the card should be strictly validated (pass true or leave empty value for default)","name":"strict"},{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"isAmericanExpressCard","syntax":"isAmericanExpressCard(strict, val)","usage":{"commonjs":{"title":"CommonJs","code":"const isAmericanExpressCard = require('simply_valid/isAmericanExpressCard');"},"standard":{"title":"Standard","code":"import isAmericanExpressCard from 'simply_valid/isAmericanExpressCard';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/isAmericanExpressCard/index.js\"></script>"}},"desc":"Validates if a provided value is a valid American Express card (depricated)","examples":["const result = isAmericanExpressCard(true, '341111111111111'); // => true\nconst result = isAmericanExpressCard(true)('341111111111111'); // => true"],"params":[{"type":{"names":["Boolean","Void"]},"description":"Determines if the card should be strictly validated","name":"strict"},{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"isDiscoverCard","syntax":"isDiscoverCard(strict, val)","usage":{"commonjs":{"title":"CommonJs","code":"const isDiscoverCard = require('simply_valid/isDiscoverCard');"},"standard":{"title":"Standard","code":"import isDiscoverCard from 'simply_valid/isDiscoverCard';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/isDiscoverCard/index.js\"></script>"}},"desc":"Validates if a provided value is a valid American Express card (depricated)","examples":["const result = isDiscoverCard(true, '6111111111111111'); // => true\nconst result = isDiscoverCard(true)('6111111111111111'); // => true"],"params":[{"type":{"names":["Boolean","Void"]},"description":"Determines if the card should be strictly validated","name":"strict"},{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"isBelowMax","syntax":"isBelowMax(m, val)","usage":{"commonjs":{"title":"CommonJs","code":"const isBelowMax = require('simply_valid/isBelowMax');"},"standard":{"title":"Standard","code":"import isBelowMax from 'simply_valid/isBelowMax';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/isBelowMax/index.js\"></script>"}},"desc":"Validates if a provided value is a below the set maximum","examples":["const result = isBelowMax(20, '19'); // => true\nconst result = isBelowMax(20)('19'); // => true"],"params":[{"type":{"names":["Number"]},"description":"The max to validate against","name":"m"},{"type":{"names":["String"]},"description":"The value to validate with","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"isAboveMin","syntax":"isAboveMin(m, val)","usage":{"commonjs":{"title":"CommonJs","code":"const isAboveMin = require('simply_valid/isAboveMin');"},"standard":{"title":"Standard","code":"import isAboveMin from 'simply_valid/isAboveMin';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/isAboveMin/index.js\"></script>"}},"desc":"Validates if a provided value is a below the set minimum","examples":["const result = isAboveMin(15, '19'); // => true\nconst result = isAboveMin(15)('19'); // => true"],"params":[{"type":{"names":["Number"]},"description":"The min to validate against","name":"m"},{"type":{"names":["String"]},"description":"The value to validate with","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"meetsMinMax","syntax":"meetsMinMax($0.min, $0.max, val)","usage":{"commonjs":{"title":"CommonJs","code":"const meetsMinMax = require('simply_valid/meetsMinMax');"},"standard":{"title":"Standard","code":"import meetsMinMax from 'simply_valid/meetsMinMax';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/meetsMinMax/index.js\"></script>"}},"desc":"Validates if the value contains numbers or not","examples":["const result = meetsMinMax('11'); // => false\nconst result = meetsMinMax('eew2211'); // => true\nconst result = meetsMinMax('eerrt'); // => true"],"params":[{"type":{"names":["Number"]},"description":"The min value to compare to","name":"$0.min"},{"type":{"names":["Number"]},"description":"The min value to compare to","name":"$0.max"},{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"meetsYearStandard","syntax":"meetsYearStandard(val)","usage":{"commonjs":{"title":"CommonJs","code":"const meetsYearStandard = require('simply_valid/meetsYearStandard');"},"standard":{"title":"Standard","code":"import meetsYearStandard from 'simply_valid/meetsYearStandard';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/meetsYearStandard/index.js\"></script>"}},"desc":"Validates if the value is a valid year string","examples":["const result = meetsYearStandard('2017'); // => true\nconst result = meetsYearStandard('17'); // => true\nconst result = meetsYearStandard('178'); // => false"],"params":[{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"meetsCVN","syntax":"meetsCVN(val)","usage":{"commonjs":{"title":"CommonJs","code":"const meetsCVN = require('simply_valid/meetsCVN');"},"standard":{"title":"Standard","code":"import meetsCVN from 'simply_valid/meetsCVN';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/meetsCVN/index.js\"></script>"}},"desc":"Validates if the value is a valid CVN code","examples":["const result = meetsCVN('201'); // => true\nconst result = meetsCVN('1777'); // => false"],"params":[{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"meetsCVNAmex","syntax":"meetsCVNAmex(val)","usage":{"commonjs":{"title":"CommonJs","code":"const meetsCVNAmex = require('simply_valid/meetsCVNAmex');"},"standard":{"title":"Standard","code":"import meetsCVNAmex from 'simply_valid/meetsCVNAmex';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/meetsCVNAmex/index.js\"></script>"}},"desc":"Validates if the value is a valid Amex CVN code","examples":["const result = meetsCVNAmex('201'); // => false\nconst result = meetsCVNAmex('1777'); // => true"],"params":[{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"meetsTreadDepth","syntax":"meetsTreadDepth(val)","usage":{"commonjs":{"title":"CommonJs","code":"const meetsTreadDepth = require('simply_valid/meetsTreadDepth');"},"standard":{"title":"Standard","code":"import meetsTreadDepth from 'simply_valid/meetsTreadDepth';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/meetsTreadDepth/index.js\"></script>"}},"desc":"Validates if the value is a valid treaddepth style","examples":["const result = meetsTreadDepth('12'); // => true\nconst result = meetsTreadDepth('AA'); // => false"],"params":[{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"meetsPassReq","syntax":"meetsPassReq(val)","usage":{"commonjs":{"title":"CommonJs","code":"const meetsPassReq = require('simply_valid/meetsPassReq');"},"standard":{"title":"Standard","code":"import meetsPassReq from 'simply_valid/meetsPassReq';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/meetsPassReq/index.js\"></script>"}},"desc":"Validates if the value is a valid treaddepth style","examples":["const result = meetsPassReq('default', 'cOol12$d'); // => true\nconst result = meetsPassReq('default')('cOol12$d') // => true\nconst result = meetsPassReq('default', 'AA'); // => false"],"params":[{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"noSpecials","syntax":"noSpecials(val)","usage":{"commonjs":{"title":"CommonJs","code":"const noSpecials = require('simply_valid/noSpecials');"},"standard":{"title":"Standard","code":"import noSpecials from 'simply_valid/noSpecials';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/noSpecials/index.js\"></script>"}},"desc":"Validates if the value has no special characters","examples":["const result = noSpecials('AAAA'); // => true\nconst result = noSpecials('1122334') // => true\nconst result = noSpecials('AAA12!#$'); // => false"],"params":[{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"noNumbers","syntax":"noNumbers(val)","usage":{"commonjs":{"title":"CommonJs","code":"const noNumbers = require('simply_valid/noNumbers');"},"standard":{"title":"Standard","code":"import noNumbers from 'simply_valid/noNumbers';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/noNumbers/index.js\"></script>"}},"desc":"Validates if the value has no numbers","examples":["const result = noNumbers('AAAA'); // => true\nconst result = noNumbers('1122334') // => false\nconst result = noNumbers('AAA12!#$'); // => false"],"params":[{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]},{"title":"noLetters","syntax":"noLetters(val)","usage":{"commonjs":{"title":"CommonJs","code":"const noLetters = require('simply_valid/noLetters');"},"standard":{"title":"Standard","code":"import noLetters from 'simply_valid/noLetters';"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/simply_valid/noLetters/index.js\"></script>"}},"desc":"Validates if the value has no Letters","examples":["const result = noLetters('1122334') // => true\nconst result = noLetters('AAAA'); // => false\nconst result = noLetters('AAA12!#$'); // => false"],"params":[{"type":{"names":["String"]},"description":"The value to validate against","name":"val"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true or false based on the validation test"}]}]